<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2024-04-21T16:22:41+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">blank</title><subtitle></subtitle><entry><title type="html">Animate a Simple Pendulum with Manim</title><link href="http://localhost:4000/blog/2024/simplependulum/" rel="alternate" type="text/html" title="Animate a Simple Pendulum with Manim" /><published>2024-04-03T15:30:00+05:30</published><updated>2024-04-03T15:30:00+05:30</updated><id>http://localhost:4000/blog/2024/simplependulum</id><content type="html" xml:base="http://localhost:4000/blog/2024/simplependulum/"><![CDATA[<p>In this post, we’ll explore how to create a basic animation of a simple pendulum using the Python library <a href="https://www.manim.community/">Manim</a>. Manim is a powerful and user-friendly tool for creating mathematical animations, perfect for visualizing scientific concepts. Developed by <code class="language-plaintext highlighter-rouge">Grant Sanderson</code>, the creator of the popular educational YouTube channel <a href="https://www.youtube.com/c/3blue1brown">3Blue1Brown</a>. Manim is a fantastic tool for teachers, researchers to illustrate complicated ideas, simulate how things work in real life, and explain tricky science concepts in a clear and visual way.</p>

<h2 id="setting-up-manim">Setting up Manim</h2>
<h3 id="-manim-playground-"><span style="color:#5e940e"> Manim playground </span></h3>

<p>Setting up manim is simple. While local installation is recommended for full functionality, but if you want to play around with manim you can check out their in-browser interactive manim playground without local installation on <a href="https://try.manim.community/">https://try.manim.community/</a>. <br />
You will provided with a jupyter notebook where you can add your python codes to test and play with Manim.</p>

<h3 id="-local-installation-"><span style="color:#5e940e"> Local installation </span></h3>

<p>You can install Manim locally , all you need is a decent code editor. I prefer using <a href="https://code.visualstudio.com/"><code class="language-plaintext highlighter-rouge">Visual Studio Code</code></a>. After installing the editor install <code class="language-plaintext highlighter-rouge">Python extension for VScode</code> and <code class="language-plaintext highlighter-rouge">pylance</code> which will make the programming experience less painful. Installing Manim library which will be different depending up on the OS you are using.</p>

<ul>
  <li>Install VS Code</li>
  <li>Install Python</li>
  <li>Add extensions to VS code - <code class="language-plaintext highlighter-rouge">python</code> and <code class="language-plaintext highlighter-rouge">pylance</code></li>
  <li>Install Manim Library on your local machine.</li>
</ul>

<h5 id="windows">Windows</h5>
<ol>
  <li>Install a package manager <a href="https://chocolatey.org/">Chocolatey</a> following their instructions.</li>
  <li>
    <p>Open a PowerShell window as administrator and type the following command:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>choco <span class="nb">install </span>manim
</code></pre></div>    </div>
  </li>
</ol>

<h5 id="linux---ubuntu">Linux - Ubuntu</h5>

<ol>
  <li>Open a terminal window.</li>
  <li>
    <p><b> Install dependencies: <b></b></b></p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt <span class="nb">install </span>build-essential python3-dev libcairo2-dev libpango1.0-dev ffmpeg python3-pip
</code></pre></div>    </div>
  </li>
  <li>
    <p>Install Manim using pip</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip3 <span class="nb">install </span>manim
</code></pre></div>    </div>
  </li>
</ol>

<h5 id="macos">macOS</h5>

<ol>
  <li>Install <a href="https://brew.sh">Homebrew</a> - follow the instructions on their website.</li>
  <li>
    <p>Open Terminal</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install </span>manim
</code></pre></div>    </div>
  </li>
</ol>

<p>You can find more about the installation process from these links.</p>

<ul>
  <li>
    <p><a href="https://www.python.org/downloads/">Install Python</a></p>
  </li>
  <li><a href="https://code.visualstudio.com/">Download Visual Studio Code</a></li>
  <li><a href="https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance">Pylance for VS Code</a></li>
  <li><a href="https://marketplace.visualstudio.com/items?itemName=ms-python.python">Python for VS Code</a></li>
  <li>
    <p><a href="https://code.visualstudio.com/docs/editor/extension-marketplace#:~:text=You%20can%20browse%20and%20install,on%20the%20VS%20Code%20Marketplace.">More about installing extension in VS Code</a></p>
  </li>
  <li><a href="https://docs.manim.community/en/stable/installation/windows.html">Installing Manim on Windows</a></li>
  <li><a href="https://docs.manim.community/en/stable/installation/linux.html">Instaling Manim on Linux </a></li>
  <li><a href="https://docs.manim.community/en/stable/installation/macos.html">Installing Manim on macOS</a></li>
</ul>

<h2 id="jumping-into-the-code">Jumping into the code</h2>

<p>open the VS Code and create a file named pendulum.py</p>

<p>The first step is to import the necessary libraries, <code class="language-plaintext highlighter-rouge">manim</code> and <code class="language-plaintext highlighter-rouge">numpy</code>. NumPy is a numerical python package which is needed for calculations like finding cosine angle <code class="language-plaintext highlighter-rouge">cos</code> , squre-root <code class="language-plaintext highlighter-rouge">sqrt()</code> etc. the next step is to define the frame size for our animation which is not mandatory. Here I have chosen a potrait frame of size <code class="language-plaintext highlighter-rouge">1080 X 1920</code>. If we do not choose the frame size then the output will be in the default 1920 x 1080.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">manim</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">config</span><span class="p">.</span><span class="n">frame_size</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1080</span><span class="p">,</span> <span class="mi">1920</span><span class="p">)</span>

</code></pre></div></div>

<p>Now lets define our first scene. Manim takes classes as scenes and render it as a short . We can create our first scene named <code class="language-plaintext highlighter-rouge">Scene_1</code> as :</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Scene_1</span><span class="p">(</span><span class="n">Scene</span><span class="p">):</span>
     <span class="k">def</span> <span class="nf">construct</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
</code></pre></div></div>

<blockquote class="block-tip">
  <p>Please do care about the spaces in the second line, Python is an intened language. Each line of code within a block must be indented by the same number of spaces or tabs.</p>
</blockquote>

<p>Now we can create our pendulum. We can start by creating a pendulum stand. For that first we need to create a <code class="language-plaintext highlighter-rouge">Line()</code>  named lineA which starts from 8 units above the oringin (center of the frame) to 4 units below. We can color the line blue color. We can set it to behind the scene plane by changing its <code class="language-plaintext highlighter-rouge">z_index</code> in the same way create another small blue line for the hook and and a blue<code class="language-plaintext highlighter-rouge">Rectangle()</code> named rect. Group the components with <code class="language-plaintext highlighter-rouge">VGroup()</code> name it as stand.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="n">lineA</span> <span class="o">=</span> <span class="nc">Line</span><span class="p">(</span><span class="n">start</span><span class="o">=</span><span class="n">UP</span><span class="o">*</span><span class="mi">8</span><span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="n">DOWN</span><span class="o">*</span><span class="mi">4</span><span class="p">)</span>
        <span class="n">lineA</span><span class="p">.</span><span class="nf">set_color</span><span class="p">(</span><span class="n">BLUE</span><span class="p">)</span>
        <span class="n">lineA</span><span class="p">.</span><span class="nf">set_z_index</span><span class="p">(</span><span class="n">lineA</span><span class="p">.</span><span class="n">z_index</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>

        <span class="n">lineB</span> <span class="o">=</span> <span class="nc">Line</span><span class="p">()</span>
        <span class="n">lineB</span><span class="p">.</span><span class="nf">set_color</span><span class="p">(</span><span class="n">BLUE</span><span class="p">)</span>
        <span class="n">lineB</span><span class="p">.</span><span class="nf">next_to</span><span class="p">(</span><span class="n">lineA</span><span class="p">,</span><span class="n">direction</span><span class="o">=</span><span class="n">UP</span><span class="p">,</span><span class="n">buff</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        <span class="n">lineB</span><span class="p">.</span><span class="nf">set_z_index</span><span class="p">(</span><span class="n">lineB</span><span class="p">.</span><span class="n">z_index</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>

        <span class="n">rect</span> <span class="o">=</span> <span class="nc">Rectangle</span><span class="p">(</span><span class="n">height</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">width</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
        <span class="n">rect</span><span class="p">.</span><span class="nf">set_color</span><span class="p">(</span><span class="n">BLUE</span><span class="p">)</span>
        <span class="n">rect</span><span class="p">.</span><span class="nf">set_fill</span><span class="p">(</span><span class="n">BLUE</span><span class="p">,</span> <span class="n">opacity</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">rect</span><span class="p">.</span><span class="nf">next_to</span><span class="p">(</span><span class="n">lineA</span><span class="p">,</span><span class="n">direction</span><span class="o">=</span><span class="n">DOWN</span><span class="p">,</span><span class="n">buff</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        
        <span class="n">stand</span> <span class="o">=</span> <span class="nc">VGroup</span><span class="p">(</span><span class="n">lineA</span><span class="p">,</span><span class="n">lineB</span><span class="p">,</span><span class="n">rect</span><span class="p">)</span>
</code></pre></div></div>

<p>Next step is to create a bob and string using <code class="language-plaintext highlighter-rouge">Circle()</code> with a radius=0.5 and red colour . Create the string with <code class="language-plaintext highlighter-rouge">Line()</code> as same way we did erlier.
 Connect the bob and string using <code class="language-plaintext highlighter-rouge">VGroup()</code>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="c1">#  BOB
</span>        <span class="n">circle</span> <span class="o">=</span> <span class="nc">Circle</span><span class="p">(</span><span class="n">radius</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span> 
        <span class="n">circle</span><span class="p">.</span><span class="nf">set_color</span><span class="p">(</span><span class="n">WHITE</span><span class="p">)</span> 
        <span class="n">circle</span><span class="p">.</span><span class="nf">set_fill</span><span class="p">(</span><span class="n">RED</span><span class="p">,</span> <span class="n">opacity</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
        
        <span class="c1"># string
</span>        <span class="n">fix_point</span> <span class="o">=</span> <span class="n">ORIGIN</span><span class="o">+</span><span class="n">UP</span><span class="o">*</span><span class="mi">8</span>
        <span class="n">line</span> <span class="o">=</span> <span class="nc">Line</span><span class="p">(</span><span class="n">start</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="n">end</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],)</span>
        <span class="n">line</span><span class="p">.</span><span class="nf">set_z_index</span><span class="p">(</span><span class="n">line</span><span class="p">.</span><span class="n">z_index</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        
        <span class="n">pendulum</span> <span class="o">=</span><span class="nc">VGroup</span><span class="p">(</span><span class="n">circle</span><span class="p">,</span><span class="n">line</span><span class="p">)</span>
</code></pre></div></div>
<p>Its time to animate the pendulum.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">self</span><span class="p">.</span><span class="nf">play</span><span class="p">(</span> <span class="nc">Create</span><span class="p">(</span><span class="n">stand</span><span class="p">))</span>
<span class="n">self</span><span class="p">.</span><span class="nf">play</span><span class="p">(</span> <span class="nc">Create</span><span class="p">(</span><span class="n">pendulum</span><span class="p">))</span>

</code></pre></div></div>

<p>Lets check wether the code works, for that we need to run our code.</p>

<p>Go to <b> Terminal &gt; New Terminal</b></p>

<p>A new terminal will be created under the editor</p>

<div class="col-sm mt-3 mt-md-0">
        

<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/terminal-480.webp 480w,/assets/img/terminal-800.webp 800w,/assets/img/terminal-1400.webp 1400w," sizes="95vw" type="image/webp" />
    
    <img src="/assets/img/terminal.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
</figure>

    </div>

<p>paste the below code to the terminal.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> python <span class="nt">-m</span> manim ./pendulum.py
</code></pre></div></div>
<p>If everything goes good you will get an output like :</p>

<div class="col-sm mt-3 mt-md-0">
        

<figure>
  <picture>
    <!-- Auto scaling with imagemagick -->
    <!--
      See https://www.debugbear.com/blog/responsive-images#w-descriptors-and-the-sizes-attribute and
      https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images for info on defining 'sizes' for responsive images
    -->
    
      <source class="responsive-img-srcset" srcset="/assets/img/output-480.webp 480w,/assets/img/output-800.webp 800w,/assets/img/output-1400.webp 1400w," sizes="95vw" type="image/webp" />
    
    <img src="/assets/img/output.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />
  </picture>

  
</figure>

    </div>

<p>Now check the project window. you will find your animation in <b> media &gt; videos &gt; Scene_1.mp4 </b></p>

<p>But wait. The pendulum is not oscilating. So what next? So the next step is to add the physics.</p>

<p>\begin{equation}
 \theta =  \theta_o cos(wt)
\end{equation}
Where \(\theta_o\) is the maximum angle, \(w\) is the anguar frequancy (\(w=\sqrt(g/l)\) here \(g\) is gravitational acceleration and \(l\) is the length of pendulum) and \(t\) is the time of oscillation. This equation accurately describes the angular position of a simple pendulum over time. We can  use this equation to oscilate our pendulum.</p>

<p>Lets define our variables first. Add the variables right under the <code class="language-plaintext highlighter-rouge">def construct</code> function.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Scene_1</span><span class="p">(</span><span class="n">Scene</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">construct</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="n">g</span> <span class="o">=</span> <span class="mf">9.8</span>
        <span class="n">l</span> <span class="o">=</span> <span class="mi">8</span>
        <span class="n">t</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">theta_init</span> <span class="o">=</span> <span class="n">PI</span><span class="o">/</span><span class="mi">4</span>
        <span class="n">omega</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">sqrt</span><span class="p">(</span><span class="n">g</span><span class="o">/</span><span class="n">l</span><span class="p">)</span>
        <span class="n">theta</span> <span class="o">=</span>  <span class="n">theta_init</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="nf">cos</span><span class="p">(</span><span class="n">omega</span><span class="o">*</span><span class="n">t</span><span class="p">)</span>
       
</code></pre></div></div>

<p>Make an Oscillation using <code class="language-plaintext highlighter-rouge">Rotate()</code> function. paste the below code after removing the line <code class="language-plaintext highlighter-rouge">self.play(Create(pendulum))</code></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">self</span><span class="p">.</span><span class="nf">wait</span><span class="p">(</span><span class="n">duration</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
        <span class="k">while</span> <span class="n">t</span> <span class="o">&lt;=</span><span class="mi">5</span> <span class="p">:</span>
            <span class="n">theta</span> <span class="o">=</span> <span class="n">theta_init</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="nf">cos</span><span class="p">(</span><span class="n">omega</span><span class="o">*</span><span class="n">t</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">t</span> <span class="o">=</span> <span class="n">t</span><span class="o">+</span><span class="mf">2.25</span>
            
            <span class="n">self</span><span class="p">.</span><span class="nf">play</span><span class="p">(</span>
                <span class="nc">Rotate</span><span class="p">(</span>
                    <span class="n">pendulum</span><span class="p">,</span>
                    <span class="n">angle</span><span class="o">=</span><span class="n">theta</span><span class="p">,</span>
                    <span class="n">about_point</span> <span class="o">=</span> <span class="n">fix_point</span><span class="p">,</span>
                    <span class="n">run_time</span><span class="o">=</span><span class="mf">1.5</span>
                <span class="p">)</span>
            <span class="p">)</span>
</code></pre></div></div>

<p>The final code will look like :</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Scene_1</span><span class="p">(</span><span class="n">Scene</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">construct</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="n">g</span> <span class="o">=</span> <span class="mf">9.8</span>
        <span class="n">l</span> <span class="o">=</span> <span class="mi">8</span>
        <span class="n">t</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">theta_init</span> <span class="o">=</span> <span class="n">PI</span><span class="o">/</span><span class="mi">4</span>
        <span class="n">omega</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">sqrt</span><span class="p">(</span><span class="n">g</span><span class="o">/</span><span class="n">l</span><span class="p">)</span>
        <span class="n">theta</span> <span class="o">=</span>  <span class="n">theta_init</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="nf">cos</span><span class="p">(</span><span class="n">omega</span><span class="o">*</span><span class="n">t</span><span class="p">)</span>
       

       <span class="c1">#  Pendulum stand
</span>        <span class="n">lineA</span> <span class="o">=</span> <span class="nc">Line</span><span class="p">(</span><span class="n">start</span><span class="o">=</span><span class="n">UP</span><span class="o">*</span><span class="mi">8</span><span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="n">DOWN</span><span class="o">*</span><span class="mi">4</span><span class="p">)</span>
        <span class="n">lineA</span><span class="p">.</span><span class="nf">set_color</span><span class="p">(</span><span class="n">BLUE</span><span class="p">)</span>
        <span class="n">lineA</span><span class="p">.</span><span class="nf">set_z_index</span><span class="p">(</span><span class="n">lineA</span><span class="p">.</span><span class="n">z_index</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>

        <span class="n">lineB</span> <span class="o">=</span> <span class="nc">Line</span><span class="p">()</span>
        <span class="n">lineB</span><span class="p">.</span><span class="nf">set_color</span><span class="p">(</span><span class="n">BLUE</span><span class="p">)</span>
        <span class="n">lineB</span><span class="p">.</span><span class="nf">next_to</span><span class="p">(</span><span class="n">lineA</span><span class="p">,</span><span class="n">direction</span><span class="o">=</span><span class="n">UP</span><span class="p">,</span><span class="n">buff</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        <span class="n">lineB</span><span class="p">.</span><span class="nf">set_z_index</span><span class="p">(</span><span class="n">lineB</span><span class="p">.</span><span class="n">z_index</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>

        <span class="n">rect</span> <span class="o">=</span> <span class="nc">Rectangle</span><span class="p">(</span><span class="n">height</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">width</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
        <span class="n">rect</span><span class="p">.</span><span class="nf">set_color</span><span class="p">(</span><span class="n">BLUE</span><span class="p">)</span>
        <span class="n">rect</span><span class="p">.</span><span class="nf">set_fill</span><span class="p">(</span><span class="n">BLUE</span><span class="p">,</span> <span class="n">opacity</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">rect</span><span class="p">.</span><span class="nf">next_to</span><span class="p">(</span><span class="n">lineA</span><span class="p">,</span><span class="n">direction</span><span class="o">=</span><span class="n">DOWN</span><span class="p">,</span><span class="n">buff</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        
        <span class="n">stand</span> <span class="o">=</span> <span class="nc">VGroup</span><span class="p">(</span><span class="n">lineA</span><span class="p">,</span><span class="n">lineB</span><span class="p">,</span><span class="n">rect</span><span class="p">)</span>
           
       <span class="c1">#  BOB
</span>        <span class="n">circle</span> <span class="o">=</span> <span class="nc">Circle</span><span class="p">(</span><span class="n">radius</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span> 
        <span class="n">circle</span><span class="p">.</span><span class="nf">set_color</span><span class="p">(</span><span class="n">WHITE</span><span class="p">)</span> 
        <span class="n">circle</span><span class="p">.</span><span class="nf">set_fill</span><span class="p">(</span><span class="n">RED</span><span class="p">,</span> <span class="n">opacity</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
       <span class="c1"># string
</span>        <span class="n">fix_point</span> <span class="o">=</span> <span class="n">ORIGIN</span><span class="o">+</span><span class="n">UP</span><span class="o">*</span><span class="mi">8</span>
        <span class="n">line</span> <span class="o">=</span> <span class="nc">Line</span><span class="p">(</span><span class="n">start</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="n">end</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],)</span>
        <span class="n">line</span><span class="p">.</span><span class="nf">set_z_index</span><span class="p">(</span><span class="n">line</span><span class="p">.</span><span class="n">z_index</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>

        <span class="n">pendulum</span> <span class="o">=</span><span class="nc">VGroup</span><span class="p">(</span><span class="n">circle</span><span class="p">,</span><span class="n">line</span><span class="p">)</span>

    
        <span class="n">self</span><span class="p">.</span><span class="nf">play</span><span class="p">(</span> <span class="nc">Create</span><span class="p">(</span><span class="n">stand</span><span class="p">))</span>
        <span class="n">self</span><span class="p">.</span><span class="nf">wait</span><span class="p">(</span><span class="n">duration</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
        <span class="k">while</span> <span class="n">t</span> <span class="o">&lt;=</span><span class="mi">5</span> <span class="p">:</span>
            <span class="n">theta</span> <span class="o">=</span> <span class="n">theta_init</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="nf">cos</span><span class="p">(</span><span class="n">omega</span><span class="o">*</span><span class="n">t</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">t</span> <span class="o">=</span> <span class="n">t</span><span class="o">+</span><span class="mf">2.25</span>
            
            <span class="n">self</span><span class="p">.</span><span class="nf">play</span><span class="p">(</span>
                <span class="nc">Rotate</span><span class="p">(</span>
                    <span class="n">pendulum</span><span class="p">,</span>
                    <span class="n">angle</span><span class="o">=</span><span class="n">theta</span><span class="p">,</span>
                    <span class="n">about_point</span> <span class="o">=</span> <span class="n">fix_point</span><span class="p">,</span>
                    <span class="n">run_time</span><span class="o">=</span><span class="mf">1.5</span>
                <span class="p">)</span>
            <span class="p">)</span>

</code></pre></div></div>

<p>Run the code . Now the pendulum is oscillating!</p>

<blockquote>
  <p>See this simple pendulum animation here : <a href="https://www.youtube.com/shorts/khpV78PiApc">https://www.youtube.com/shorts/khpV78PiApc</a></p>
</blockquote>]]></content><author><name></name></author><category term="python" /><category term="manim" /><category term="animation" /><category term="pendulum" /><category term="physics" /><summary type="html"><![CDATA[Create a basic animation of a simple pendulum using the Python library Manim.]]></summary></entry><entry><title type="html">A little Bibiliography modifier</title><link href="http://localhost:4000/blog/2023/bibeditor/" rel="alternate" type="text/html" title="A little Bibiliography modifier" /><published>2023-12-15T20:39:00+05:30</published><updated>2023-12-15T20:39:00+05:30</updated><id>http://localhost:4000/blog/2023/bibeditor</id><content type="html" xml:base="http://localhost:4000/blog/2023/bibeditor/"><![CDATA[<p>Ah… now it’s time to add my <code class="language-plaintext highlighter-rouge">.bib</code> file to the LaTeX… Oops, why is the author name so long?<br />
Have you ever had this situation? It happened to me when I compiled my thesis for the first time in LaTeX.<br /></p>

<p>For my master’s thesis, I had to write a bibliography with over hundred citations. After generating the citations that I realized the bibliography alone took morethan ten pages, and yes even after reducing the font size to the smallest possible.<br /><br /></p>

<p>So, what should I do now?
<br /><br />
I found out that the lengthiest part in the citations was the author names. Therefore, I decided to reduce them to two or three authors and manually add ‘et al.’ (which means “and others,” an abbreviation of the Latin term ‘et alia’).<br /> Phew… it was tedious to adjust all the hundreds of citations manually. So, I decided to write code in <code class="language-plaintext highlighter-rouge">C</code> to resolve the problem.<br /><br /></p>

<p>It’s a simple code that reduces the authors to the given number and appends <code class="language-plaintext highlighter-rouge">et al.</code> to every list given a <code class="language-plaintext highlighter-rouge">.bib</code> file.</p>

<h5 id="how-to"><b>HOW TO</b></h5>
<hr />
<ul>
  <li>Compile the code using a C compiler <br /></li>
  <li>Generate the excutable file (eg .exe) <br /></li>
  <li>Place your .bib file in the same folder. <br /></li>
  <li><b>IMPORTANT:  Rename your bib file to <code class="language-plaintext highlighter-rouge">ref.bib</code><br /></b></li>
  <li>Run the program it will ask you for the number of maximum authors. Give what it asks!<br /></li>
  <li>Press ENTER, and take a few deep breaths……..<br /></li>
  <li>Your modified .bib will be generated as output.bib<br /></li>
  <li>Verify for errors.<br /></li>
</ul>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code>



<span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string.h&gt;</span><span class="cp">
</span><span class="kt">int</span> <span class="n">maxauth</span><span class="p">;</span>
<span class="kt">char</span> <span class="o">*</span><span class="n">inputf</span> <span class="o">=</span> <span class="s">"ref.bib"</span><span class="p">;</span>      <span class="c1">//  input bib file</span>
<span class="kt">char</span> <span class="o">*</span><span class="n">outputf</span> <span class="o">=</span> <span class="s">"output.bib"</span><span class="p">;</span>  <span class="c1">// output bib file</span>
<span class="kt">FILE</span> <span class="o">*</span><span class="n">inputFile</span><span class="p">,</span> <span class="o">*</span><span class="n">outputFile</span><span class="p">;</span>
<span class="kt">char</span> <span class="n">copyLine</span><span class="p">[</span><span class="mi">565</span><span class="p">];</span>
<span class="kt">char</span> <span class="n">line</span><span class="p">[</span><span class="mi">512</span><span class="p">];</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>

 <span class="n">printf</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"                          Welcome to BibEditor                                </span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"</span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">"BibEditor is an experimental program to limit the number of authors in the given .bib file.</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"The program will ask you for the number of authors you want to display and simply remove all other</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"authors and put an et.al at the tail. Simple :)</span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">"¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"        HOW TO USE</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯</span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">"1) Place your ref.bib file in the same folder.</span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>

    
    <span class="n">printf</span><span class="p">(</span><span class="s">"IMPORTANT: [ Rename it to </span><span class="se">\"</span><span class="s">ref.bib</span><span class="se">\"</span><span class="s"> (without quotations) if your .bib file has a different name. ]</span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">"2) Run the program it will ask you for the number of maximum authors. Give what it asks! </span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">"3) Press ENTER, and take a few deep breaths ;)</span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">"4) Your modified .bib will be generated as output.bib</span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">"5) Verify for errors.</span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>
   
    <span class="n">printf</span><span class="p">(</span><span class="s">"   - Author: SOORAJ NHALOOR</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"   - Email: soorajnhaloor123@gmail.com</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"   - Website: nhaloorsooraj.github.io</span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">"════════════════════════════════════════════════════════════════════════════════</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"</span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"</span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"Enter the number of maximum authors : "</span><span class="p">);</span>
    <span class="n">scanf</span><span class="p">(</span> <span class="s">"%d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">maxauth</span><span class="p">);</span>
     <span class="n">printf</span><span class="p">(</span><span class="s">"</span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"</span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>
     <span class="n">printf</span><span class="p">(</span><span class="s">"==============================================================================</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
     <span class="n">printf</span><span class="p">(</span><span class="s">"======================  LOGS  ================================================</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
     <span class="n">printf</span><span class="p">(</span><span class="s">"==============================================================================</span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>
    <span class="n">inputFile</span> <span class="o">=</span> <span class="n">fopen</span><span class="p">(</span><span class="n">inputf</span><span class="p">,</span> <span class="s">"r"</span><span class="p">);</span>    
    <span class="n">outputFile</span> <span class="o">=</span> <span class="n">fopen</span><span class="p">(</span><span class="n">outputf</span><span class="p">,</span> <span class="s">"w"</span><span class="p">);</span>  

    <span class="k">if</span> <span class="p">(</span><span class="n">inputFile</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="o">||</span> <span class="n">outputFile</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"Error opening files. Please read Readme.txt or see above ^</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="kt">char</span> <span class="n">pattern</span><span class="p">[]</span> <span class="o">=</span> <span class="s">"author = {"</span><span class="p">;</span>  
        <span class="k">while</span> <span class="p">(</span><span class="n">fgets</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">line</span><span class="p">),</span> <span class="n">inputFile</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">strstr</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="n">pattern</span><span class="p">)</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">printf</span><span class="p">(</span><span class="s">"Pattern found in this line: %s"</span><span class="p">,</span> <span class="n">line</span><span class="p">);</span>
                <span class="kt">int</span> <span class="n">commaCount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">strlen</span><span class="p">(</span><span class="n">line</span><span class="p">);</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">line</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">','</span><span class="p">)</span> <span class="p">{</span>
                        <span class="n">commaCount</span><span class="o">++</span><span class="p">;</span>
                        <span class="k">if</span> <span class="p">(</span><span class="n">commaCount</span> <span class="o">&gt;=</span> <span class="n">maxauth</span><span class="p">)</span> <span class="p">{</span>
                            <span class="n">copyLine</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">line</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                        <span class="n">line</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="sc">'\0'</span><span class="p">;</span>


                            <span class="n">fprintf</span><span class="p">(</span><span class="n">outputFile</span><span class="p">,</span> <span class="s">"%s %s et.al}</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="n">line</span><span class="p">,</span><span class="n">copyLine</span><span class="p">);</span>
                            <span class="k">break</span><span class="p">;</span>
                        <span class="p">}</span> <span class="c1">/////////////////</span>
                      
                    <span class="p">}</span>
                <span class="p">}</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">commaCount</span> <span class="o">&lt;</span> <span class="n">maxauth</span><span class="p">)</span> <span class="p">{</span>
                    <span class="n">fprintf</span><span class="p">(</span><span class="n">outputFile</span><span class="p">,</span><span class="s">"%s"</span><span class="p">,</span><span class="n">line</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="n">fprintf</span><span class="p">(</span><span class="n">outputFile</span><span class="p">,</span> <span class="s">"%s"</span><span class="p">,</span> <span class="n">line</span><span class="p">);</span>  <span class="c1">// Write unmodified line to the output file</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="n">fclose</span><span class="p">(</span><span class="n">inputFile</span><span class="p">);</span>
        <span class="n">fclose</span><span class="p">(</span><span class="n">outputFile</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

</code></pre></div></div>
<blockquote>
  <p>You can see more here : <a href="https://github.com/nhaloorsooraj/BibEditor">https://github.com/nhaloorsooraj/BibEditor</a></p>
</blockquote>]]></content><author><name></name></author><category term="C" /><category term="code" /><category term="bibiliography" /><summary type="html"><![CDATA[Sometimes long author names are hard to manage...]]></summary></entry></feed>